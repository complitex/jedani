<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ru.complitex.domain.mapper.DomainMapper">
    <resultMap id="domainResultMap" type="ru.complitex.domain.entity.Domain">
        <id column="id" property="id"/>
        <result column="object_id" property="objectId"/>
        <result column="parent_id" property="parentId"/>
        <result column="parent_entity_id" property="parentEntityId"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
        <result column="status" property="status"/>
        <result column="permission_id" property="permissionId"/>
        <result column="external_id" property="externalId"/>
        <result column="entity_name" property="entityName"/>
        <collection column="entityName=entity_name, objectId=id" property="attributes"
                    select="ru.complitex.domain.mapper.AttributeMapper.selectAttributes"/>
    </resultMap>

    <!--suppress SqlResolve -->
    <insert id="insertDomain" parameterType="ru.complitex.domain.entity.Domain" useGeneratedKeys="false" keyProperty="id">
        insert into ${entityName} (object_id, parent_id, parent_entity_id, start_date, end_date, `status`,
        permission_id, external_id)
        value (#{objectId}, #{parentId}, #{parentEntityId}, #{startDate}, #{endDate}, #{status},
        #{permissionId}, #{externalId})
    </insert>

    <!--suppress SqlResolve -->
    <select id="hasDomain" parameterType="ru.complitex.domain.entity.Domain" resultType="boolean">
        select count(id) > 0 from ${entityName} where external_id = #{externalId}
    </select>

    <!--suppress SqlResolve -->
    <select id="selectDomain" parameterType="ru.complitex.domain.entity.Domain" resultMap="domainResultMap">
        select '${entityName}' entity_name, d.* from ${entityName} d
        <where>
            <if test="objectId != null">and d.object_id = #{objectId} and `status` = 1</if>
            <if test="externalId != null">and d.external_id = #{externalId}</if>
        </where>
    </select>

    <!--suppress SqlResolve -->
    <select id="selectDomainObjectId" parameterType="ru.complitex.domain.entity.Domain" resultType="long">
        select d.object_id from ${entityName} d
          left join ${entityName}_attribute a on a.object_id = d.object_id
          left join `${entityName}_value` v on v.attribute_id = a.id
        <where>
            <foreach collection="attributes" item="i" separator="and">
              <foreach collection="i.values" item="j" separator="and">
                  <if test="j.text != null">
                      (a.entity_attribute_id = #{i.entityAttributeId} and v.locale_id = #{j.localeId} and v.text = #{j.text})
                  </if>
              </foreach>
            </foreach>
        </where>
        limit 1
    </select>

    <sql id="selectDomainsFromWhere">
        from ${object.entityName} d
        left join ${object.entityName}_attribute a on a.object_id = d.object_id
        left join `${object.entityName}_value` v on v.attribute_id = a.id

        <if test="sortProperty != null">
            <if test="sortProperty.key == 'text' or sortProperty.key == 'number' or sortProperty.key == 'value'">
                left join ${object.entityName}_attribute sort_a on sort_a.object_id = d.object_id and
                sort_a.entity_attribute_id = #{sortProperty.value}

                <if test="sortProperty.key == 'value'">
                    left join `${object.entityName}_value` sort_v on sort_v.attribute_id = sort_a.id
                </if>
            </if>
        </if>

        <where>
            <if test="object.objectId != null">d.object_id like concat('%', #{object.objectId}, '%')</if>

            <if test="object.parentId != null">
                and (d.parent_id = #{object.parentId})
            </if>

            <foreach collection="object.attributes" item="i" separator="and">
                <if test="i.text != null">
                    and (a.entity_attribute_id = #{i.entityAttributeId} and (a.text like concat('%', #{i.text}, '%') or
                    v.text like concat('%', #{i.text}, '%')))
                </if>
                <!--todo number -> id-->
                <if test="i.number != null">
                    and (a.entity_attribute_id = #{i.entityAttributeId} and a.number = #{i.number})
                </if>
            </foreach>

            <if test="map.entityAttributeId != null and map.endWith != null">
                and (a.entity_attribute_id = #{map.entityAttributeId} and a.text like concat ('%', #{map.endWith}))
            </if>

            and d.status = 1 and a.status = 1
        </where>
    </sql>

    <!--suppress SqlResolve -->
    <select id="selectDomains" parameterType="ru.complitex.common.entity.FilterWrapper" resultMap="domainResultMap">
        select distinct d.object_id, '${object.entityName}' entity_name, d.* <include refid="selectDomainsFromWhere"/>

        <if test="sortProperty != null">
            <choose>
                <when test="sortProperty.key == 'id'">order by d.id ${asc}</when>
                <when test="sortProperty.key == 'text'">order by sort_a.text ${asc}</when>
                <when test="sortProperty.key == 'number'">order by sort_a.number + 0 ${asc}</when>
                <when test="sortProperty.key == 'value'">order by sort_v.text ${asc}</when>
            </choose>
        </if>

        ${limit}
    </select>

    <!--suppress SqlResolve -->
    <select id="selectDomainsCount" parameterType="ru.complitex.common.entity.FilterWrapper" resultType="long">
        select count(distinct d.object_id) <include refid="selectDomainsFromWhere"/>
    </select>


</mapper>