<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.complitex.jedani.worker.mapper.WorkerMapper">
    <!--<cache/>-->

    <resultMap id="workerResultMap" type="ru.complitex.jedani.worker.entity.Worker"
               extends="ru.complitex.domain.mapper.DomainMapper.domainResultMapJoin">
        <result column="left" property="left"/>
        <result column="right" property="right"/>
        <result column="level" property="level"/>
        <result column="sub_worker_count" property="subWorkerCount"/>
    </resultMap>

    <select id="selectMaxJId" resultType="string">
        select max(lpad(`text`, 6, '0')) from worker_attribute where entity_attribute_id = 1
    </select>

    <select id="selectIsExistJId" resultType="boolean" parameterType="map">
        select count(*) > 0 from worker_attribute where entity_attribute_id = 1 and `text` = #{jId}
        <if test="objectId != null">and object_id != #{objectId}</if>
    </select>

    <select id="selectSubWorkersCount" parameterType="long" resultType="int">
        select count(wa.id)from  worker_attribute wa
          where wa.entity_attribute_id = 19 and wa.status = 1 and (wa.text = #{objectId} or
            wa.text like concat('%/', #{objectId}, '/%') or  wa.text like concat('%/', #{objectId}));
    </select>

    <sql id="selectWorkersWhereNode">
        <if test="object.left != null and object.right != null">
            and d.left > #{object.left} and #{object.right} > d.right

            <if test="filter == 'level3' and object.level != null">
                and #{object.level} + 3 > d.level
            </if>

            <if test="map.levelDepth != null and object.level != null">
                and #{object.level} + #{map.levelDepth} >= d.level
            </if>
        </if>
    </sql>

    <sql id="selectWorkersFromLogin">
        <if test="map.login != null">
            left join `user` u on u.id = d.parent_id
        </if>
    </sql>

    <sql id="selectWorkersWhereLogin">
        <if test="map.login != null">
            and u.login like concat('%', #{map.login}, '%')
        </if>
    </sql>

    <sql id="selectWorkersOrderSort">
        <if test="sortProperty != null">
            <choose>
                <when test="sortProperty.key == 'login'">order by u.login</when>
                <when test="sortProperty.key == 'level'">order by d.level</when>
                <when test="sortProperty.key == 'subWorkersCount'">order by sub_worker_count</when>
            </choose>
        </if>
    </sql>

    <!--suppress SqlResolve -->
    <select id="selectWorkers" parameterType="ru.complitex.common.entity.FilterWrapper" resultMap="workerResultMap">
        select d.*, '${object.entityName}' entity_name,
            (select count(w.object_id) from worker w where w.left > d.left and d.right > w.right and w.status = 1)
              sub_worker_count,
            <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsSelect"/>
        from (
            select dd.object_id object_id
            from (
                select distinct (d.object_id) object_id
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsSelectSort"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFrom"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromFilter"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsWhere"/>
                <include refid="selectWorkersWhereNode"/>
                <include refid="selectWorkersWhereLogin"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsOrderSort"/>
                <include refid="selectWorkersOrderSort"/>
            ) dd
            ${limit}
        ) o
        left join worker d on d.object_id = o.object_id
        left join worker_attribute a on a.object_id = d.object_id
        left join worker_value v on v.attribute_id = a.id
    </select>

    <!--suppress SqlResolve -->
    <select id="selectWorkersCount" parameterType="ru.complitex.common.entity.FilterWrapper" resultType="long">
        select count(distinct w.object_id) from (select d.object_id
        <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFrom"/>
        <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromFilter"/>
        <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsWhere"/>
        <include refid="selectWorkersWhereLogin"/>
        <include refid="selectWorkersWhereNode"/>) w
    </select>

    <select id="selectWorker" parameterType="long" resultMap="workerResultMap">
        <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainSql"/>
    </select>

    <select id="selectWorkersByString" parameterType="string" resultMap="workerResultMap">
        select 'worker' entity_name, w.*,
          <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsSelect"/>

          from worker w

          left join worker_attribute a on a.object_id = w.object_id
          left join worker_value v on v.attribute_id = a.id

          left join worker_attribute wa_jid on w.object_id = wa_jid.object_id and wa_jid.entity_attribute_id = 1 and wa_jid.status = 1

          left join worker_attribute wa_fn on w.object_id = wa_fn.object_id and wa_fn.entity_attribute_id = 2 and wa_fn.status = 1
          left join first_name_attribute fn_a on fn_a.object_id = wa_fn.number and fn_a.entity_attribute_id = 1 and fn_a.status = 1
          left join first_name_value fn_v on fn_v.attribute_id = fn_a.id

          left join worker_attribute wa_mn on w.object_id = wa_mn.object_id and wa_mn.entity_attribute_id = 3 and wa_mn.status = 1
          left join middle_name_attribute mn_a on mn_a.object_id = wa_mn.number and mn_a.entity_attribute_id = 1 and mn_a.status = 1
          left join middle_name_value mn_v on mn_v.attribute_id = mn_a.id

          left join worker_attribute wa_ln on w.object_id = wa_ln.object_id and wa_ln.entity_attribute_id = 4
          left join last_name_attribute ln_a on ln_a.object_id = wa_ln.number and ln_a.entity_attribute_id = 1 and ln_a.status = 1
          left join last_name_value ln_v on ln_v.attribute_id = ln_a.id

        where wa_jid.text like concat('%', #{s}) or fn_v.text like concat('%', #{s}, '%') or
          mn_v.text like concat('%', #{s}, '%') or ln_v.text like concat('%', #{s}, '%')

        limit 10
    </select>

    <select id="selectWorkerLevelDepth" parameterType="long" resultType="long">
        select ifnull((select max(w.level) - d.level from worker w where w.left > d.left and d.right > w.right and w.status = 1), 0)
          from worker d where d.object_id = #{objectId} and d.status = 1
    </select>


</mapper>