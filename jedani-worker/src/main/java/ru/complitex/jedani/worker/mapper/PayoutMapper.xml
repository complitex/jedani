<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.complitex.jedani.worker.mapper.PayoutMapper">
    <resultMap id="payoutResultMap" type="ru.complitex.jedani.worker.entity.Payout"
               extends="ru.complitex.domain.mapper.DomainMapper.domainResultMapJoin">
    </resultMap>

    <sql id="selectPayoutsFrom">
        <if test="map.worker != null">
            left join payout_attribute pa_w on pa_w.domain_id = d.id and pa_w.entity_attribute_id = 1 and pa_w.status = 1

            left join worker w on w.object_id = pa_w.number and w.status = 1
            left join worker_attribute wa_j on w.id = wa_j.domain_id and wa_j.entity_attribute_id = 1 and wa_j.status = 1

            left join worker_attribute wa_f on w.id = wa_f.domain_id and wa_f.entity_attribute_id = 2 and wa_f.status = 1
            left join first_name f on f.object_id = wa_f.number and f.status = 1
            left join first_name_attribute fa on f.id = fa.domain_id and fa.entity_attribute_id = 1 and fa.status = 1
            left join first_name_value fv on fa.id = fv.attribute_id and fv.locale_id = 1

            left join worker_attribute wa_m on w.id = wa_m.domain_id and wa_m.entity_attribute_id = 3 and wa_m.status = 1
            left join middle_name m on m.object_id = wa_m.number and m.status = 1
            left join middle_name_attribute ma on m.id = ma.domain_id and ma.entity_attribute_id = 1 and ma.status = 1
            left join middle_name_value mv on ma.id = mv.attribute_id and mv.locale_id = 1

            left join worker_attribute wa_l on w.id = wa_l.domain_id and wa_l.entity_attribute_id = 4 and wa_l.status = 1
            left join last_name l on l.object_id = wa_l.number and l.status = 1
            left join last_name_attribute la on l.id = la.domain_id and la.entity_attribute_id = 1 and la.status = 1
            left join last_name_value lv on la.id = lv.attribute_id and lv.locale_id = 1
        </if>
    </sql>

    <sql id="selectPayoutsWhere">
        <if test="map.period != null">
            and exists(select pa.id from payout_attribute pa where pa.domain_id = d.id and pa.status = 1
                and pa.entity_attribute_id = 3 and pa.number = #{map.period})
        </if>

        <if test="map.worker != null">
            and (wa_j.text like concat('%', #{map.worker}, '%')
                or lv.text like concat('%', #{map.worker}, '%')
                or mv.text like concat('%', #{map.worker}, '%')
                or fv.text like concat('%', #{map.worker}, '%'))
        </if>
    </sql>

    <!--suppress SqlResolve -->
    <select id="selectPayouts" parameterType="ru.complitex.common.entity.FilterWrapper" resultMap="payoutResultMap">
        select d.*, '${object.entityName}' entity_name,
          <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsSelect"/>
        from (
          select dd.d_id dd_id
        from (
            select d.id d_id
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFrom"/>
                <include refid="selectPayoutsFrom"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromFilter"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromSort"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsWhere"/>
                <include refid="selectPayoutsWhere"/>
                group by d.id
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsOrderSort"/>
            ) dd
            ${limit}
        ) o
        left join `payout` d on d.id = o.dd_id
        left join payout_attribute a on a.domain_id = d.id and a.status = 1
        left join payout_value v on v.attribute_id = a.id
        <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromSort"/>
        group by d.id, a.id, v.id
        <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsOrderSort"/>
    </select>

    <!--suppress SqlResolve -->
    <select id="selectPayoutsCount" parameterType="ru.complitex.common.entity.FilterWrapper" resultType="long">
        select count(distinct r.object_id) from (select d.object_id
            <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFrom"/>
            <include refid="selectPayoutsFrom"/>
            <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromFilter"/>
            <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsWhere"/>
            <include refid="selectPayoutsWhere"/>
        ) r
    </select>
</mapper>
