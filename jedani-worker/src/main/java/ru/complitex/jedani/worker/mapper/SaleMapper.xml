<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.complitex.jedani.worker.mapper.SaleMapper">
    <resultMap id="saleResultMap" type="ru.complitex.jedani.worker.entity.Sale"
               extends="ru.complitex.domain.mapper.DomainMapper.domainResultMapJoin">
    </resultMap>

    <sql id="selectSalesWhere">
      <if test="map.sellerWorker != null">
          and exists(select sa.id from sale_attribute sa on (sa.domain_id = d.id and sa.status = 1)
            where d.status = 1 and sa.entity_attribute_id = 1 and sa.number = #{map.sellerWorker})
      </if>

        <if test="map.regionIds != null">
            and exists(select sa.id from sale_attribute sa on (sa.domain_id = d.id and sa.status = 1
                and sa.entity_attribute_id = 1)
                left join worker w on (w.object_id = sa.number and w.status = 1)
                left join worker_attribute wa_r on (wa_r.domain_id = w.id and wa_r.entity_attribute_id = 6
                    and wa_r.status = 1)
                left join worker_value wv_r on (wv_r.attribute_id = wa_r.id)
            where d.status = 1 and wv_r.number in (#{map.regionIds}))
        </if>
    </sql>

     <!--suppress SqlResolve -->
    <select id="selectSales" parameterType="ru.complitex.common.entity.FilterWrapper" resultMap="saleResultMap">
        select d.*, '${object.entityName}' entity_name,
          <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsSelect"/>
        from (
          select dd.d_id dd_id
        from (
            select d.id d_id
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFrom"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromFilter"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromSort"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsWhere"/>
                <include refid="selectSalesWhere"/>
                group by d.id
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsOrderSort"/>
            ) dd
            ${limit}
        ) o
        left join sale d on d.id = o.dd_id
        left join sale_attribute a on a.domain_id = d.id and a.status = 1
        left join sale_value v on v.attribute_id = a.id
        <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromSort"/>
        group by d.id, a.id, v.id
        <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsOrderSort"/>
    </select>

    <!--suppress SqlResolve -->
    <select id="selectSalesCount" parameterType="ru.complitex.common.entity.FilterWrapper" resultType="long">
        select count(distinct s.object_id) from (select d.object_id
            <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFrom"/>
            <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromFilter"/>
            <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsWhere"/>
            <include refid="selectSalesWhere"/>
        ) s
    </select>

</mapper>