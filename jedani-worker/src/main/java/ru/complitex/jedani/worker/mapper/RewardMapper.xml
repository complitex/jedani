<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.complitex.jedani.worker.mapper.RewardMapper">
    <resultMap id="rewardResultMap" type="ru.complitex.jedani.worker.entity.Reward"
               extends="ru.complitex.domain.mapper.DomainMapper.domainResultMapJoin">
    </resultMap>

    <sql id="selectRewardsFrom">
        <if test="map.month != null or map.actualMonth != null">
            left join reward_attribute ra_m on ra_m.domain_id = d.id and ra_m.entity_attribute_id = 8 and ra_m.status = 1
        </if>

        <if test="map.sale != null">
            left join reward_attribute ra_s on ra_s.domain_id = d.id and ra_s.entity_attribute_id = 7 and ra_s.status = 1
            left join sale s on s.object_id = ra_s.number and s.status = 1
            left join sale_attribute sa_c on sa_c.domain_id = s.id and sa_c.entity_attribute_id = 10 and sa_c.status = 1
        </if>

        <if test="map.worker != null">
            left join reward_attribute ra_w on ra_w.domain_id = d.id and ra_w.entity_attribute_id = 2 and ra_w.status = 1

            left join worker w on w.object_id = ra_w.number and w.status = 1
            left join worker_attribute wa_j on w.id = wa_j.domain_id and wa_j.entity_attribute_id = 1 and wa_j.status = 1

            left join worker_attribute wa_f on w.id = wa_f.domain_id and wa_f.entity_attribute_id = 2 and wa_f.status = 1
            left join first_name f on f.object_id = wa_f.number and f.status = 1
            left join first_name_attribute fa on f.id = fa.domain_id and fa.entity_attribute_id = 1 and fa.status = 1
            left join first_name_value fv on fa.id = fv.attribute_id and fv.locale_id = 1

            left join worker_attribute wa_m on w.id = wa_m.domain_id and wa_m.entity_attribute_id = 3 and wa_m.status = 1
            left join middle_name m on m.object_id = wa_m.number and m.status = 1
            left join middle_name_attribute ma on m.id = ma.domain_id and ma.entity_attribute_id = 1 and ma.status = 1
            left join middle_name_value mv on ma.id = mv.attribute_id and mv.locale_id = 1

            left join worker_attribute wa_l on w.id = wa_l.domain_id and wa_l.entity_attribute_id = 4 and wa_l.status = 1
            left join last_name l on l.object_id = wa_l.number and l.status = 1
            left join last_name_attribute la on l.id = la.domain_id and la.entity_attribute_id = 1 and la.status = 1
            left join last_name_value lv on la.id = lv.attribute_id and lv.locale_id = 1
        </if>

        <if test="map.nullDetailStatus != null">
            left join reward_attribute ra_sd on ra_sd.domain_id = d.id and ra_sd.entity_attribute_id = 6 and ra_sd.status = 1
        </if>
    </sql>

    <sql id="selectRewardsWhere">
        <if test="map.month != null">
            and month(ra_m.date) = month(#{map.month}) and year(ra_m.date) = year(#{map.month})
        </if>

        <if test="map.actualMonth != null">
            and #{map.actualMonth} >= ra_m.date
        </if>

        <if test="map.period != null">
            and exists(select ra.id from reward_attribute ra where ra.domain_id = d.id and ra.status = 1
                and ra.entity_attribute_id = 24 and ra.number = #{map.period})
        </if>

        <if test="map.sale != null">
            and sa_c.text like concat('%', #{map.sale}, '%')
        </if>

        <if test="map.worker != null">
            and (wa_j.text like concat('%', #{map.worker}, '%')
                or lv.text like concat('%', #{map.worker}, '%')
                or mv.text like concat('%', #{map.worker}, '%')
                or fv.text like concat('%', #{map.worker}, '%'))
        </if>

        <if test="map.nullDetailStatus != null">
            and (ra_sd.number is null)
        </if>
    </sql>

    <!--suppress SqlResolve -->
    <select id="selectRewards" parameterType="ru.complitex.common.entity.FilterWrapper" resultMap="rewardResultMap">
        select d.*, '${object.entityName}' entity_name,
          <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsSelect"/>
        from (
          select dd.d_id dd_id
        from (
            select d.id d_id
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFrom"/>
                <include refid="selectRewardsFrom"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromFilter"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromSort"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsWhere"/>
                <include refid="selectRewardsWhere"/>
                group by d.id
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsOrderSort"/>
            ) dd
            ${limit}
        ) o
        left join `reward` d on d.id = o.dd_id
        left join reward_attribute a on a.domain_id = d.id and a.status = 1
        left join reward_value v on v.attribute_id = a.id
        <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromSort"/>
        group by d.id, a.id, v.id
        <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsOrderSort"/>
    </select>

    <!--suppress SqlResolve -->
    <select id="selectRewardsCount" parameterType="ru.complitex.common.entity.FilterWrapper" resultType="long">
        select count(distinct r.object_id) from (select d.object_id
            <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFrom"/>
            <include refid="selectRewardsFrom"/>
            <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromFilter"/>
            <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsWhere"/>
            <include refid="selectRewardsWhere"/>
        ) r
    </select>

    <select id="selectCalculatedRewardIdsMyMonth" parameterType="date" resultType="long">
        select r.id from reward r
            left join reward_attribute ra_m on r.id = ra_m.domain_id and ra_m.status = 1 and ra_m.entity_attribute_id = 8
            left join reward_attribute ra_s on r.id = ra_s.domain_id and ra_s.status = 1 and ra_s.entity_attribute_id = 21
        where year(ra_m.date) = year(#{month}) and month(ra_m.date) = month(#{month}) and ra_s.number in (1, 2)
    </select>

    <select id="selectRewardIdsByPeriod" parameterType="long" resultType="long">
        select r.id from reward r
            left join reward_attribute ra_p on r.id = ra_p.domain_id and ra_p.status = 1 and ra_p.entity_attribute_id = 24
        where ra_p.number = #{periodId}
    </select>

    <delete id="deleteRewards" parameterType="long">
        delete r from reward r
            left join reward_attribute ra_p on ra_p.domain_id = r.id and ra_p.entity_attribute_id = 24 and ra_p.status = 1
        where ra_p.number = #{periodId}
    </delete>

    <select id="selectRewardsPointSum" parameterType="map" resultType="bigdecimal">
        select sum(cast(ra_p.text as decimal(20, 5))) from reward r
            left join reward_attribute ra_st on r.id = ra_st.domain_id and ra_st.entity_attribute_id = 21 and ra_st.status = 1
            left join reward_attribute ra_p on r.id = ra_p.domain_id and ra_p.entity_attribute_id = 3 and ra_p.status = 1
            left join reward_attribute ra_t on r.id = ra_t.domain_id and ra_t.entity_attribute_id = 4 and ra_t.status = 1
            left join reward_attribute ra_s on r.id = ra_s.domain_id and ra_s.entity_attribute_id = 7 and ra_s.status = 1
            left join reward_attribute ra_m on r.id = ra_m.domain_id and ra_m.entity_attribute_id = 18 and ra_m.status = 1
            <if test="filter == 'before'">
                left join reward_attribute ra_pd on r.id = ra_pd.domain_id and ra_pd.entity_attribute_id = 24 and ra_pd.status = 1
                left join `period` p on p.object_id = ra_pd.number and p.status = 1
                left join period_attribute pa_m on p.id = pa_m.domain_id and pa_m.entity_attribute_id = 1 and pa_m.status = 1
            </if>
        where r.status = 1
          and ra_t.number = #{rewardTypeId} and ra_s.number = #{saleId}
          <if test="managerId != null"> and ra_m.number = #{managerId}</if>
          and ra_st.number = #{rewardStatusId}
         <if test="filter == 'before'">
             and (select pa.date from `period` p
                 left join period_attribute pa on p.id = pa.domain_id and pa.entity_attribute_id = 1 and pa.status = 1
                 where p.object_id = #{periodId} and p.status = 1) > pa_m.date
         </if>
    </select>
</mapper>
