<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.complitex.jedani.worker.mapper.PriceMapper">
    <resultMap id="priceResultMap" type="ru.complitex.jedani.worker.entity.Price"
               extends="ru.complitex.domain.mapper.DomainMapper.domainResultMapJoin">
    </resultMap>

    <sql id="selectPricesFrom">
        <if test="map.date != null">
            left join price_attribute pa_b on pa_b.domain_id = d.id and pa_b.entity_attribute_id = 1 and pa_b.status = 1
            left join price_attribute pa_e on pa_e.domain_id = d.id and pa_e.entity_attribute_id = 2 and pa_e.status = 1
        </if>
    </sql>

    <sql id="selectPricesWhere">
        <if test="map.date != null">
            and (#{map.date} >= pa_b.date and (pa_e.date is null or pa_e.date >= #{map.date}))
        </if>
    </sql>
    
    <!--suppress SqlResolve -->
    <select id="selectPrices" parameterType="ru.complitex.common.entity.FilterWrapper" resultMap="priceResultMap">
        select d.*, '${object.entityName}' entity_name,
          <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsSelect"/>
        from (
          select dd.d_id dd_id
        from (
            select d.id d_id
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFrom"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromFilter"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromSort"/>
                <include refid="selectPricesFrom"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsWhere"/>
                <include refid="selectPricesWhere"/>
                group by d.id
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsOrderSort"/>
            ) dd
            ${limit}
        ) o
        left join price d on d.id = o.dd_id
        left join price_attribute a on a.domain_id = d.id and a.status = 1
        left join price_value v on v.attribute_id = a.id
        <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromSort"/>
        group by d.id, a.id, v.id
        <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsOrderSort"/>
    </select>

    <!--suppress SqlResolve -->
    <select id="selectPricesCount" parameterType="ru.complitex.common.entity.FilterWrapper" resultType="long">
        select count(distinct p.object_id) from (select d.object_id
            <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFrom"/>
            <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromFilter"/>
            <include refid="selectPricesFrom"/>
            <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsWhere"/>
            <include refid="selectPricesWhere"/>
        ) p
    </select>
</mapper>