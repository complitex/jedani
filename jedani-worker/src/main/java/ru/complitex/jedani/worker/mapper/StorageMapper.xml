<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.complitex.jedani.worker.mapper.StorageMapper">
    <resultMap id="storageResultMap" type="ru.complitex.jedani.worker.entity.Storage"
               extends="ru.complitex.domain.mapper.DomainMapper.domainResultMapJoin">
        <result column="nomenclature_count" property="nomenclatureCount"/>
        <result column="transfer_count" property="transferCount"/>
    </resultMap>

    <!--suppress SqlResolve -->
    <sql id="selectStoragesWorkers">
        (select concat(wa_id.text, ln_v.text, fn_v.text, mn_v.text) w_name
            from storage_attribute sa

            left join storage s on s.id = sa.domain_id
            left join storage_value sv on sa.id = sv.attribute_id

            left join worker w on w.object_id = sv.number and w.status = 1

            left join worker_attribute wa_id on wa_id.domain_id = w.id and wa_id.entity_attribute_id = 1 and wa_id.status = 1

            left join worker_attribute wa_fn on wa_fn.domain_id = w.id and wa_fn.entity_attribute_id = 2 and wa_fn.status = 1
            left join first_name fn on fn.object_id = wa_fn.number and fn.status = 1
            left join first_name_attribute fn_a on fn_a.domain_id = fn.id and fn_a.status = 1
            left join first_name_value fn_v on fn_a.id = fn_v.attribute_id

            left join worker_attribute wa_mn on wa_mn.domain_id = w.id and wa_mn.entity_attribute_id = 3 and wa_mn.status = 1
            left join middle_name mn on mn.object_id = wa_mn.number and mn.status = 1
            left join middle_name_attribute mn_a on mn_a.domain_id = mn.id and mn_a.status = 1
            left join middle_name_value mn_v on mn_a.id = mn_v.attribute_id

            left join worker_attribute wa_ln on wa_ln.domain_id = w.id and wa_ln.entity_attribute_id = 4 and wa_ln.status = 1
            left join last_name ln on ln.object_id = wa_ln.number and ln.status = 1
            left join last_name_attribute ln_a on ln_a.domain_id = ln.id and ln_a.status = 1
            left join last_name_value ln_v on ln_a.id = ln_v.attribute_id

          where s.object_id = d.object_id and sa.entity_attribute_id = 2 and sa.status = 1 limit 1
          )
    </sql>

    <!--suppress SqlResolve -->
    <sql id="selectStoragesWorker">
        (select concat(wa_id.text, ln_v.text, fn_v.text, mn_v.text) w_name
            from `storage` s

            left join worker w on w.object_id = s.parent_id and w.status = 1

           left join worker_attribute wa_id on wa_id.domain_id = w.id and wa_id.entity_attribute_id = 1 and wa_id.status = 1

            left join worker_attribute wa_fn on wa_fn.domain_id = w.id and wa_fn.entity_attribute_id = 2 and wa_fn.status = 1
            left join first_name fn on fn.object_id = wa_fn.number and fn.status = 1
            left join first_name_attribute fn_a on fn_a.domain_id = fn.id and fn_a.status = 1
            left join first_name_value fn_v on fn_a.id = fn_v.attribute_id

            left join worker_attribute wa_mn on wa_mn.domain_id = w.id and wa_mn.entity_attribute_id = 3 and wa_mn.status = 1
            left join middle_name mn on mn.object_id = wa_mn.number and mn.status = 1
            left join middle_name_attribute mn_a on mn_a.domain_id = mn.id and mn_a.status = 1
            left join middle_name_value mn_v on mn_a.id = mn_v.attribute_id

            left join worker_attribute wa_ln on wa_ln.domain_id = w.id and wa_ln.entity_attribute_id = 4 and wa_ln.status = 1
            left join last_name ln on ln.object_id = wa_ln.number and ln.status = 1
            left join last_name_attribute ln_a on ln_a.domain_id = ln.id and ln_a.status = 1
            left join last_name_value ln_v on ln_a.id = ln_v.attribute_id

          where s.object_id = d.object_id and s.parent_id is not null limit 1
          )
    </sql>

    <!--suppress SqlResolve -->
    <sql id="selectStoragesNomenclatureCount">
        (select count(p.object_id) from product p where p.parent_id = d.object_id)
    </sql>

    <!--suppress SqlResolve -->
    <sql id="selectStoragesTransferCount">
        (select count(ta.id) from transfer_attribute ta
            where ta.number = d.object_id and ta.entity_attribute_id in (6, 7) and ta.status = 1)
    </sql>

    <!--suppress SqlResolve -->
    <sql id="selectStoragesSelect">
         <include refid="selectStoragesNomenclatureCount"/> nomenclature_count,
         <include refid="selectStoragesTransferCount"/>transfer_count
    </sql>

    <sql id="selectStoragesFrom">
    </sql>

    <sql id="selectStoragesWhere">
        <if test="map.objectId != null">
            d.object_id concat('%', #{map.objectId}, '%')
        </if>
        <if test="map.city != null">
        and (
          <if test="map.currentWorker != null">
              d.parent_id = #{map.currentWorker}
              or exists(select sa.id from storage_attribute sa
                left join storage_value sv on sv.attribute_id = sa.id and sa.entity_attribute_id = 2 and sa.status = 1
                where sa.domain_id = d.id and sv.number = #{map.currentWorker})
              or
          </if>

          exists(select sa.id from storage_attribute sa
            left join city c on sa.entity_attribute_id = 1 and sa.status = 1 and c.object_id = sa.number
            left join city rc on c.parent_id = rc.parent_id
            where sa.domain_id = d.id and (c.object_id = ${map.city} or rc.object_id = ${map.city}))
        )
        </if>
        <if test="map.region != null">
            and (
                exists(select sa.id from storage_attribute sa
                    left join city c on sa.entity_attribute_id = 1 and sa.status = 1 and c.object_id = sa.number
                         where sa.domain_id = d.id and c.parent_id = ${map.region})
            )
        </if>
      <if test="map.workers != null">
          <choose>
              <when test="filter == 'search'"> or </when>
              <otherwise> and </otherwise>
          </choose>
          <include refid="selectStoragesWorkers"/> like concat('%', #{map.workers}, '%')
      </if>
      <if test="map.worker != null">
          <choose>
              <when test="filter == 'search'"> or </when>
              <otherwise> and </otherwise>
          </choose>
          <include refid="selectStoragesWorker"/> like concat('%', #{map.worker}, '%')
      </if>
      <if test="map.nomenclatureCount != null">
          and <include refid="selectStoragesNomenclatureCount"/> = #{map.nomenclatureCount}
      </if>
      <if test="map.transferCount != null">
        and <include refid="selectStoragesTransferCount"/> = #{map.transferCount}
      </if>
    </sql>

    <sql id="selectStoragesOrderSort">
        <if test="sortProperty != null">
            <choose>
                <when test="sortProperty.key == 'workers'">order by <include refid="selectStoragesWorkers"/> ${asc}</when>
                <when test="sortProperty.key == 'worker'">order by <include refid="selectStoragesWorker"/> ${asc}</when>
                <when test="sortProperty.key == 'nomenclatureCount'">order by <include refid="selectStoragesNomenclatureCount"/> ${asc}</when>
                <when test="sortProperty.key == 'transferCount'">order by <include refid="selectStoragesTransferCount"/> ${asc}</when>
            </choose>
        </if>
    </sql>

    <!--suppress SqlResolve -->
    <select id="selectStorages" parameterType="ru.complitex.common.entity.FilterWrapper" resultMap="storageResultMap">
        select d.*, '${object.entityName}' entity_name,
          <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsSelect"/>,
          <include refid="selectStoragesSelect"/>
        from (
          select dd.d_id dd_id
        from (
            select d.id d_id
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFrom"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromFilter"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromSort"/>
                <include refid="selectStoragesFrom"/>
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsWhere"/>
                <include refid="selectStoragesWhere"/>
                group by d.id
                <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsOrderSort"/>
                <include refid="selectStoragesOrderSort"/>
            ) dd
            ${limit}
        ) o
        left join `storage` d on d.id = o.dd_id
        left join storage_attribute a on a.domain_id = d.id and a.status = 1
        left join storage_value v on v.attribute_id = a.id
        <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromSort"/>
        group by d.id, a.id, v.id
        <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsOrderSort"/>
        <include refid="selectStoragesOrderSort"/>
    </select>

    <!--suppress SqlResolve -->
    <select id="selectStoragesCount" parameterType="ru.complitex.common.entity.FilterWrapper" resultType="long">
        select count(distinct s.object_id) from (select d.object_id
            <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFrom"/>
            <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsFromFilter"/>
            <include refid="selectStoragesFrom"/>
            <include refid="ru.complitex.domain.mapper.DomainMapper.selectDomainsWhere"/>
            <include refid="selectStoragesWhere"/>
        ) s
    </select>
</mapper>
